#!/usr/bin/env ruby

puts "Omnibus repository unification tool..."

if ARGV.length <= 3
  puts "Usage: omnirepo <owner org/user> <destination-omnibus-directory> <source-repository> <source-repository> [...]"
  puts "> No owner organization/username supplied." unless ARGV.any?
  puts "> No destination omnibus directory supplied." unless ARGV.length >= 2
  puts "> No source repositories supplied." unless ARGV.length == 3
  puts "> Only one source repository supplied." if ARGV.length == 3
  exit!
end

GITHUB = "git@github.com".freeze
owner = ARGV.shift

#de TODO: Validate owner.

tmp='/dev/shm'
tmp='/tmp' unless Dir.exists?(tmp)

puts LINE = "-----------------------------------------------------------------------------------".freeze

omni = "#{Dir.pwd}/#{ARGV.shift}"

#de TODO: Allow use of literal paths, vs. relative.
#DE TODO: Check permissions/writeability, etc.

unless Dir.exists?(omni)
  puts "Destination omnibus directory does not exist: #{omni}"
  exit!
end

Dir.mkdir(TMP="#{tmp}/omnirepo.#{`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`}")

puts "> Owner organization/user: #{owner}"
puts "> Destination omnibus: #{omni}"
puts "> Working directory: #{TMP}"
puts LINE

Dir.chdir(omni)

puts `pwd`
puts `git show 2> /dev/null | grep "commit" | wc -l`
if `git show 2> /dev/null | grep "commit" | wc -l`.to_i != 1
  puts "ERROR: Destination omnibus directory is not a git repository."
  exit!
end

#de TODO: Further validate omnibus repository.


ARGV.uniq.each { |repo|
  
  puts "> Adding the #{repo} repository..."
  puts "> Source: #{GITHUB}:#{owner}/#{repo}.git"

  unless Dir.chdir(TMP)
    puts "ERROR: Failure to change to working directory."
    exit!
  end

  unless `git clone --mirror "#{GITHUB}:#{owner}/#{repo}.git" #{repo}`
    puts "FERROR: ailed to clone: #{repo}"
    exit!
  end

  unless Dir.chdir(File.join(TMP, repo))
    echo "ERROR: Failed to mirror the #{repo} repository."
    exit!
  end

  puts LINE

  if `git remote | grep origin | wc -l`.to_i > 0
    puts "Removing remote origin linkage to be safe. Snip."
    `git remote rm origin > /dev/null 2> /dev/null`
  end

  puts LINE
  puts "These branches will all be migrated:"
  puts LINE

  `git branch | grep -v master | grep -v "refs/"`.split("\n").each { |branch|
    #de `git branch -m "#{branch}" "#{repo}/#{branch}"`
    echo "> #{branch.rjust(35)} becomes #{repo}/#{branch}\n"
  }

  exit 0

  puts "Preserving logs and files as-is, but as a sub-directory."
  `git filter-branch --tree-filter \
          'mkdir #{repo}; \
          find -maxdepth 1 \
              -not -name . \
              -not -name .git \
              -not -name #{repo} \
          | xargs -I{} mv {} #{repo}' \
      -d /dev/shm/#{repo} -- --all`

  puts "Garbage collection of source repository..."
  `git gc --aggresive`
}


#de TODO: Delete working directory, or at least give command line option to do so.

puts "Omnibus unification of repositories complete."